# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

resources:
  repositories:
    - repository: Service # The name used to reference this repository in the checkout step
      type: github
      endpoint: github.com_surveyjsdeveloper
      name: surveyjs/service

trigger:
  batch: true
  branches:
    include:
      - master
  tags:
    exclude:
      - v*.*.*

pool:
  vmImage: "Ubuntu-22.04"

steps:
  - checkout: self
  - checkout: Service
    persistCredentials: true
    clean: true
    fetchDepth: 1

  - task: NodeTool@0
    inputs:
      versionSpec: "16.x"
    displayName: "Install Node.js"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/survey-pdf/"
      Contents: "package.json"
      TargetFolder: "$(Build.SourcesDirectory)/Temp/"
      OverWrite: true
    displayName: "Copy package.json for cache key"
  - task: Cache@2
    inputs:
      key: "npm-cache-pdf | $(Build.SourcesDirectory)/Temp/package.json"
      path: $(Build.SourcesDirectory)/survey-pdf/node_modules
      cacheHitVar: NPM_CACHE_RESTORED
    displayName: Cache NPM

  - powershell: |
      $env:GIT_REDIRECT_STDERR = '2>&1'
      git config --global user.email "surveyjs.org@gmail.com"
      git config --global user.name "surveyjsdeveloper"
    displayName: "set up Git config"

  - task: Npm@1
    displayName: "NPM install"
    inputs:
      command: install
      verbose: false
      workingDir: $(Build.SourcesDirectory)/survey-pdf
    condition: ne(variables.NPM_CACHE_RESTORED, 'true')

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: "specific"
      project: "af2804d2-859a-4705-9ef5-cdf46d1d5d4f"
      pipeline: "56"
      specificBuildWithTriggering: true
      buildVersionToDownload: "latest"
      downloadType: "single"
      artifactName: "SurveyJSLibraryBuildCore"
      downloadPath: "$(System.ArtifactsDirectory)"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(System.ArtifactsDirectory)/SurveyJSLibraryBuildCore/packages/survey-core"
      Contents: "**"
      TargetFolder: "$(Build.SourcesDirectory)/survey-pdf/node_modules/survey-core"
      OverWrite: true

  # npm run release with version
  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(System.ArtifactsDirectory)/SurveyJSLibraryBuildCore/"
      Contents: "version.txt"
      TargetFolder: "$(Build.SourcesDirectory)/"
      OverWrite: true
    displayName: "Copy Build Artifact - SurveyJSVersion File"

  - powershell: |
      $version = Get-Content $(Build.SourcesDirectory)/version.txt
      Write-Host "##vso[task.setvariable variable=SurveyJSVersion;]$version"
    displayName: "setup SurveyJSVersion variable from SurveyJSVersionFile"

  - powershell: |
      cd $(Build.SourcesDirectory)/survey-pdf
      npm run release -- --release-as $(SurveyJSVersion)
    displayName: "npm run release specific version"
  #####################################################

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: "specific"
      project: "af2804d2-859a-4705-9ef5-cdf46d1d5d4f"
      pipeline: "42"
      specificBuildWithTriggering: true
      buildVersionToDownload: "latest"
      downloadType: "single"
      artifactName: "SurveyJSWidgetsBuild"
      downloadPath: "$(System.ArtifactsDirectory)"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(System.ArtifactsDirectory)/SurveyJSWidgetsBuild/packages/survey-widgets"
      Contents: "**"
      TargetFolder: "$(Build.SourcesDirectory)/survey-pdf/node_modules/surveyjs-widgets"
      OverWrite: true

  - script: |
      cd $(Build.SourcesDirectory)/survey-pdf
      npm run build:all
    displayName: "build"

  - script: |
      cd $(Build.SourcesDirectory)/survey-pdf
      npm test
    displayName: "unit tests"

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura # or JaCoCo
      summaryFileLocation: "$(System.DefaultWorkingDirectory)/**/*coverage.xml"
      reportDirectory: "$(System.DefaultWorkingDirectory)/**/coverage"

  - script: |
      cd $(Build.SourcesDirectory)/survey-pdf
      npm run doc_gen
    displayName: "generate docs"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/survey-pdf/docs"
      Contents: |
        classes.json
        pmes.json
        surveyjs_definition.json
      TargetFolder: "$(Build.SourcesDirectory)/service/surveyjs.io/App_Data/DocsPdf"
      OverWrite: true
      CleanTargetFolder: false
    displayName: "copy generated docs to the local surveyjs/service repo"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/survey-pdf"
      Contents: "README.md"
      TargetFolder: "$(Build.SourcesDirectory)/service/surveyjs.io/App_Data/DocsPdf"
    displayName: "copy generated docs to the local surveyjs/service repo"

  # - task: DeleteFiles@1
  #   inputs:
  #     SourceFolder: '$(Build.SourcesDirectory)/service/surveyjs.io/App_Data/DocsPdf'
  #     Contents: 'PdfExportOverview.md'
  #  Rename-Item -Path "$(Build.SourcesDirectory)/service/surveyjs.io/App_Data/DocsPdf/README.md" -NewName "PdfExportOverview.md"

  # read about the problem with git output ($env:GIT_REDIRECT_STDERR = '2>&1') :
  # https://github.com/microsoft/azure-pipelines-yaml/issues/248
  # https://stackoverflow.com/questions/58485585/azure-pipeline-powershell-and-git-on-windows-server-2019-gives-error-in-output
  - powershell: |
      cd $(Build.SourcesDirectory)/service
      git pull origin master
      git fetch origin master --tags --force
      git checkout master
      git add surveyjs.io/App_Data/DocsPdf
      git commit -m "updated survey-pdf docs [azurepipelines skip]"
      git pull origin master
      git push origin master
    displayName: "git surveyjs/service push updated docs"
  # - powershell: |
  #     cd $(Build.SourcesDirectory)/service
  #     git pull origin V2
  #     git fetch origin V2 --tags --force
  #     git checkout V2
  #     git add surveyjs.io/App_Data/DocsPdf
  #     git commit -m "updated survey-pdf V2 docs [azurepipelines skip]"
  #     git pull origin V2
  #     git push origin V2
  #   displayName: "git surveyjs/service push updated V2 docs"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/survey-pdf/docs"
      Contents: |
        surveyjs_definition.json
      TargetFolder: "$(Build.SourcesDirectory)/survey-pdf/build"
      OverWrite: true
      CleanTargetFolder: false
    displayName: "put surveyjs_definition.json into build"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "$(Build.SourcesDirectory)/survey-pdf/build"
      targetFolder: $(Build.ArtifactStagingDirectory)/SurveyjsPDFbuild/packages/survey-pdf

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)/SurveyjsPDFbuild/"
      ArtifactName: "SurveyjsPDFbuild"
      publishLocation: "Container"
